name: Monitor Upstream Release

on:
  schedule:
    # 每小时检查一次上游仓库的release
    - cron: '0 * * * *'
  # 也可以手动触发
  workflow_dispatch:

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Get latest upstream release
        id: upstream
        run: |
          # 获取上游仓库的最新release
          latest_release=$(curl -s https://api.github.com/repos/cloudflare/cloudflared/releases/latest | jq -r '.tag_name')
          echo "latest_release=$latest_release" >> $GITHUB_OUTPUT
          
          # 检查本地是否已存在该release
          existing_tag=$(git ls-remote --tags origin $latest_release | wc -l)
          echo "existing_tag=$existing_tag" >> $GITHUB_OUTPUT
          
          # 如果本地不存在该tag，则创建
          if [ "$existing_tag" -eq 0 ]; then
            echo "should_create_tag=true" >> $GITHUB_OUTPUT
          else
            echo "should_create_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag and trigger release
        if: steps.upstream.outputs.should_create_tag == 'true'
        run: |
          # 创建新的tag
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag ${{ steps.upstream.outputs.latest_release }}
          git push origin ${{ steps.upstream.outputs.latest_release }}
          
          # 触发release工作流
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"upstream-release","client_payload":{"tag":"${{ steps.upstream.outputs.latest_release }}"}}'
